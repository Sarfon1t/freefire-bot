import os
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ADMIN_BOT_TOKEN = os.getenv("ADMIN_BOT_TOKEN")
print("Admin bot token loaded")
async def forward_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text and update.message.text.startswith("/done"):
        parts = update.message.text.split()
        if len(parts) == 2 and parts[1].isdigit():
            tg_id = int(parts[1])
            try:
                await context.bot.send_message(
                    chat_id=tg_id,
                    text="üéÅ –ê–ª–º–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!\n\n/Rate - —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—à –±–æ—Ç"
                )
                await update.message.reply_text("‚úÖ –ö–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            except Exception as e:
                await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        else:
            await update.message.reply_text("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /done <Telegram_ID>")
    else:
        await update.message.reply_text("ü§ñ –Ø –∂–¥—É –∫–æ–º–∞–Ω–¥—É –≤–∏–¥–∞: /done <Telegram_ID>")

if __name__ == "__main__":
    app = ApplicationBuilder().token(ADMIN_BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), forward_command))
    app.add_handler(MessageHandler(filters.COMMAND, forward_command))
    print("Admin bot is running...")
    app.run_polling()
