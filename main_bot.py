import logging
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å Render
MAIN_BOT_TOKEN = os.getenv("MAIN_BOT_TOKEN")
ADMIN_BOT_ID = int(os.getenv("ADMIN_BOT_ID"))  # Telegram ID –∞–¥–º–∏–Ω–∞
RATING_CHANNEL = os.getenv("RATING_CHANNEL")  # –∫–∞–Ω–∞–ª, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –æ—Ü–µ–Ω–∫–∏

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
user_ff_ids = {}
user_states = {}

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π Free Fire ID:")
    user_states[update.effective_user.id] = "WAITING_FF_ID"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–æ—Ç–æ
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    state = user_states.get(user_id)

    if state == "WAITING_FF_ID":
        ff_id = update.message.text
        user_ff_ids[user_id] = ff_id
        user_states[user_id] = "WAITING_PAYMENT"
        await update.message.reply_text("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ–ø–ª–∞—Ç–∏ –∏ –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã üíµ")
    elif state == "WAITING_PAYMENT" and update.message.photo:
        ff_id = user_ff_ids.get(user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
        caption = f"üí∞ –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞!\nFF ID: {ff_id}\nTelegram: @{update.effective_user.username or '–Ω–µ—Ç'}\nID: {user_id}"
        photo = update.message.photo[-1]
        await context.bot.send_photo(
            chat_id=ADMIN_BOT_ID,
            photo=photo.file_id,
            caption=caption
        )
        await update.message.reply_text("üì§ –°–∫—Ä–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ñ–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞.")
    else:
        await update.message.reply_text("‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ (/rate –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏)
async def send_rating_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("‚≠êÔ∏è" * i, callback_data=str(i))] for i in range(1, 11)]
    await update.message.reply_text(
        "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –û—Ü–µ–Ω–∏ –Ω–∞—à –±–æ—Ç –æ—Ç 1 –¥–æ 10:",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏-–æ—Ü–µ–Ω–∫–∏
async def handle_rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    rating = query.data
    user = query.from_user
    text = f"‚≠êÔ∏è –û—Ü–µ–Ω–∫–∞ –æ—Ç @{user.username or user.id}: {rating}/10"
    await context.bot.send_message(chat_id=RATING_CHANNEL, text=text)
    await query.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! ‚ù§Ô∏è")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(MAIN_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("rate", send_rating_request))
    app.add_handler(MessageHandler(filters.TEXT | filters.PHOTO, handle_message))
    app.add_handler(CallbackQueryHandler(handle_rating))

    print("Main bot is running...")
    app.run_polling()
    
